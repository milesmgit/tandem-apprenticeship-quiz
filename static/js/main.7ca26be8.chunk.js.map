{"version":3,"sources":["Question.js","Prize.js","TMDB.js","ButtonRedeem.js","Cube.js","Instructions.js","Trending.js","App.js","serviceWorker.js","index.js"],"names":["Question","questions","id","question","correct","blue","red","yellow","orange","Prize","props","className","Button","color","onClick","reset","src","movie","alt","title","dotenv","config","TMDB","api_key","process","ButtonRedeem","state","view","fetchPrizeClick","bind","console","log","url","axios","method","then","response","data","results","randomImg","Math","floor","random","imgPath","poster_path","setState","this","right","Component","Cube","window","location","reload","startTimer","timerOn","timerTime","timer","setInterval","newTime","clearInterval","checkAnswer","counter","length","currentQuestion","currentAnswerChoiceBlue","currentAnswerChoiceOrange","currentAnswerChoiceYellow","currentAnswerChoiceRed","colorClicked","myClick","delay","e","target","interval","undefined","renderAnswer","displayAnswer","document","getElementById","questionNumber","innerHTML","Instructions","Trending","trending","showTrending","trendingFilms","map","film","index","App","to","path","component","exact","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ca26be8.chunk.js","sourcesContent":["const Question = {\r\n  questions: [\r\n    {\r\n      id: 1,\r\n      question: \"What is pair programming?\",\r\n      correct: \"blue\",\r\n      blue:\r\n        \"Blue: Pair programming is an agile software development technique in which two programmers work together at one workstation. One, the driver, writes code while the other, the observer or navigator, reviews each line of code as it is typed in. The two programmers switch roles frequently.\",\r\n      red: \"Red: One person naps while the other person does all the work.\",\r\n      yellow: \"Yellow: Two people get paid to chat about Star Wars.\",\r\n      orange:\r\n        \"Orange: Two people are put into a closed space and the senior developer is allowed to use brass knuckles on the junior developer until a reasonable solution is brought forth.\",\r\n    },\r\n    {\r\n      id: 2,\r\n      question: \"What is Imposter Syndrome?\",\r\n      correct: \"orange\",\r\n      blue: \"Blue: Trump's Raison d'Ãªtre\",\r\n      red: \"Red: A necessecity for folks in the witness protection program.\",\r\n      yellow: \"Yellow: A constant need to act on Broadway.\",\r\n      orange:\r\n        \"Orange: A feeling that you are not qualified to hold the position for which you were hired.\",\r\n    },\r\n    {\r\n      id: 3,\r\n      question: \"Who was named a 'Notable Entrepreneur' by Crain's Chicago?\",\r\n      correct: \"yellow\",\r\n      blue: \"Blue: Matt DuBois\",\r\n      red: \"Red: Shamyle Ghazali\",\r\n      yellow: \"Yellow: JC Grubbs\",\r\n      orange: \"Orange: Mina Slater\",\r\n    },\r\n    {\r\n      id: 4,\r\n      question: \"Who works in Engineering for Tandem?\",\r\n      correct: \"yellow\",\r\n      blue: \"Blue: Woody Woodpecker\",\r\n      red: \"Red: Elizabeth Coleman\",\r\n      yellow: \"Yellow: Sasha Grodzins\",\r\n      orange: \"Orange: Kim Jong-Un\",\r\n    },\r\n    {\r\n      id: 5,\r\n      question: \"Where did JC Grubbs attend undergraduate studies?\",\r\n      correct: \"red\",\r\n      blue: \"Blue: MIT\",\r\n      red: \"Red: Campbell University\",\r\n      yellow: \"Yellow: University of Louisville\",\r\n      orange: \"Orange: University of Kentucky\",\r\n    },\r\n    {\r\n      id: 6,\r\n      question: \"What did JC Grubbs study during his undergraduate years?\",\r\n      correct: \"orange\",\r\n      blue: \"Blue: Philosophy\",\r\n      red: \"Red: Yoga\",\r\n      yellow: \"Yellow: Basket-weaving\",\r\n      orange: \"Orange: Classical Piano\",\r\n    },\r\n    {\r\n      id: 7,\r\n      question: \"What was Tandem known by before it was Tandem?\",\r\n      correct: \"red\",\r\n      blue: \"Blue: Tonedeaf\",\r\n      red: \"Red: DevMynd\",\r\n      yellow: \"Yellow: GarageLogic\",\r\n      orange: \"Orange: ByteMe\",\r\n    },\r\n    {\r\n      id: 8,\r\n      question: \"Fill in the Blanks - LGBTQ + _ + _?\",\r\n      correct: \"red\",\r\n      blue: \"Blue: What?\",\r\n      red: \"Red: I (Intersex) + A (Asexual) +\",\r\n      yellow: \"Yellow: Now I know my ABC's\",\r\n      orange: \"Orange: Social Empathy\",\r\n    },\r\n    {\r\n      id: 9,\r\n      question:\r\n        \"Trump's mouth could be mistaken for Chicago because it is very___?\",\r\n      correct: \"yellow\",\r\n      blue: \"Blue: Orange-stained with cheetoh dust.\",\r\n      red: \"Red: Gaping as the Chicago Spire.\",\r\n      yellow: \"Yellow: Windy.\",\r\n      orange: \"Orange: Open.\",\r\n    },\r\n    {\r\n      id: 10,\r\n      question:\r\n        \"Who was recognized by Clutch.co as one of the top software development firms in the nation on multiple occasions.?\",\r\n      correct: \"red\",\r\n      blue: \"Blue: Grandma Miles\",\r\n      red: \"Red: Tandem\",\r\n      yellow: \"Yellow: Interapt\",\r\n      orange: \"Orange: TechNode\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default Question;\r\n","import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./Prize.css\";\r\n\r\nconst Prize = (props) => {\r\n  return (\r\n    <div className=\"image-div\">\r\n      <Button color=\"primary\" onClick={() => props.reset()} id=\"reset-game2\">\r\n        Reset Game\r\n      </Button>\r\n      <img src={props.movie} alt={props.title} />\r\n    </div>\r\n  );\r\n};\r\nexport default Prize;\r\n","import dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nconst TMDB = {\r\n  api_key: process.env.REACT_APP_TMDB,\r\n};\r\n\r\nexport default TMDB;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Prize from \"./Prize\";\r\nimport axios from \"axios\";\r\nimport TMDB from \"./TMDB\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nclass ButtonRedeem extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      movie: null,\r\n      view: 1,\r\n      title: null,\r\n    };\r\n    this.fetchPrizeClick = this.fetchPrizeClick.bind(this);\r\n  }\r\n\r\n  fetchPrizeClick() {\r\n    console.log(\"fetchPrizeClick Button Works!\");\r\n    // const url = `https://api.themoviedb.org/3/movie/${film}?api_key=${TMDB.api_key}&append_to_response=videos,images&language=en`;\r\n    const url = `https://api.themoviedb.org/3/trending/movie/week?api_key=${TMDB.api_key}&append_to_response=videos,images&language=en`;\r\n    axios({\r\n      method: \"GET\",\r\n      url: url,\r\n    }).then((response) => {\r\n      console.log(response); // take a look at what you get back!\r\n      console.log(\"title = \" + response.data.results[0].title);\r\n      let posterLink = \"https://image.tmdb.org/t/p/w780\";\r\n      let randomImg = Math.floor(Math.random() * 19);\r\n\r\n      let imgPath = posterLink + response.data.results[randomImg].poster_path;\r\n      let title = response.data.results[randomImg].title;\r\n      this.setState({\r\n        movie: imgPath,\r\n        view: 2,\r\n        title: title,\r\n      });\r\n    });\r\n  }\r\n  //   will later pass the movie api to Prize\r\n  render() {\r\n    if (this.state.view === 1) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => this.fetchPrizeClick()}\r\n            className=\"button\"\r\n          >\r\n            Redeem Your Prize!!!\r\n          </Button>\r\n          <h3>\r\n            You got {this.props.right} answers correct! Click the redeem button\r\n            to receive a prize.\r\n          </h3>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Prize\r\n            movie={this.state.movie}\r\n            title={this.state.title}\r\n            reset={this.props.reset}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ButtonRedeem;\r\n","import React, { Component } from \"react\";\r\nimport Question from \"./Question\";\r\nimport ButtonRedeem from \"./ButtonRedeem\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nclass Cube extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      // game state [if active = false disable board]\r\n\r\n      currentQuestion: Question.questions[0],\r\n      currentAnswerChoiceBlue: Question.questions[0].blue,\r\n      currentAnswerChoiceOrange: Question.questions[0].orange,\r\n      currentAnswerChoiceYellow: Question.questions[0].yellow,\r\n      currentAnswerChoiceRed: Question.questions[0].red,\r\n      view: -1,\r\n      timerTime: 35,\r\n    };\r\n\r\n    this.right = 0;\r\n    this.counter = 0;\r\n    this.colorClicked = null;\r\n    this.myClick = this.myClick.bind(this);\r\n    this.checkAnswer = this.checkAnswer.bind(this);\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.delay = this.delay.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n  }\r\n\r\n  reset = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  startTimer = () => {\r\n    this.setState({\r\n      timerOn: true,\r\n      timerTime: this.state.timerTime,\r\n      view: 0,\r\n    });\r\n    this.timer = setInterval(() => {\r\n      const newTime = this.state.timerTime - 1;\r\n      if (newTime >= 0) {\r\n        this.setState({\r\n          timerTime: newTime,\r\n        });\r\n      } else {\r\n        clearInterval(this.timer);\r\n        this.checkAnswer();\r\n        if (this.counter < Question.questions.length - 1) {\r\n          this.setState({\r\n            currentQuestion: Question.questions[this.counter],\r\n            currentAnswerChoiceBlue: Question.questions[this.counter].blue,\r\n            currentAnswerChoiceOrange: Question.questions[this.counter].orange,\r\n            currentAnswerChoiceYellow: Question.questions[this.counter].yellow,\r\n            currentAnswerChoiceRed: Question.questions[this.counter].red,\r\n            timerTime: 35,\r\n          });\r\n          this.startTimer();\r\n        } else if (\r\n          this.counter === Question.questions.length - 1 &&\r\n          this.right !== Question.questions.length\r\n        ) {\r\n          this.setState({\r\n            timerTime: 0,\r\n            timerOn: false,\r\n            view: 2,\r\n          });\r\n        }\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  //  grabbing the color clicked and mapping it to colorClicked\r\n  myClick(e) {\r\n    console.log(e.target.id);\r\n\r\n    this.colorClicked = e.target.id;\r\n  }\r\n\r\n  delay() {\r\n    this.interval = setInterval(() => {\r\n      if (this.right === Question.questions.length) {\r\n        this.setState({ view: 1 });\r\n      } else {\r\n        this.setState({ view: 2 });\r\n      }\r\n    }, 10000);\r\n  }\r\n\r\n  // I am using bracket notation for this bit ${Question.questions[this.counter][renderAnswer]}\r\n  // so that I can access an object via a string input.\r\n\r\n  checkAnswer() {\r\n    if (this.counter > Question.questions.length - 1) {\r\n      return;\r\n    }\r\n    if (\r\n      Question.questions[this.counter] !== null &&\r\n      Question.questions[this.counter] !== undefined\r\n    ) {\r\n      let renderAnswer = Question.questions[this.counter].correct;\r\n      const displayAnswer = document.getElementById(\"display\");\r\n      let questionNumber = this.counter;\r\n      questionNumber = questionNumber + 1;\r\n      displayAnswer.innerHTML = `Question ${questionNumber}: \r\n    ${Question.questions[this.counter].question} - Correct Answer - \r\n      ${Question.questions[this.counter][renderAnswer]}\r\n    `;\r\n      if (this.counter < Question.questions.length) {\r\n        this.counter += 1;\r\n        if (this.colorClicked === this.state.currentQuestion.correct) {\r\n          this.right += 1;\r\n          console.log(\"right \" + this.right);\r\n        }\r\n\r\n        if (this.counter < Question.questions.length) {\r\n          this.setState({\r\n            currentQuestion: Question.questions[this.counter],\r\n            currentAnswerChoiceBlue: Question.questions[this.counter].blue,\r\n            currentAnswerChoiceOrange: Question.questions[this.counter].orange,\r\n            currentAnswerChoiceYellow: Question.questions[this.counter].yellow,\r\n            currentAnswerChoiceRed: Question.questions[this.counter].red,\r\n            timerTime: 35,\r\n          });\r\n        } else if (this.counter === Question.questions.length) {\r\n          this.setState({\r\n            currentQuestion: Question.questions[Question.questions.length - 1],\r\n            currentAnswerChoiceBlue:\r\n              Question.questions[Question.questions.length - 1].blue,\r\n            currentAnswerChoiceOrange:\r\n              Question.questions[Question.questions.length - 1].orange,\r\n            currentAnswerChoiceYellow:\r\n              Question.questions[Question.questions.length - 1].yellow,\r\n            currentAnswerChoiceRed:\r\n              Question.questions[Question.questions.length - 1].red,\r\n            timerTime: 0,\r\n          });\r\n\r\n          this.delay();\r\n        }\r\n        console.log(\"counter \" + this.counter);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // variable to hold states of my view\r\n    let view = this.state.view;\r\n\r\n    if (view === -1) {\r\n      return (\r\n        <Button\r\n          color=\"primary\"\r\n          onClick={() => this.startTimer()}\r\n          id=\"start-game\"\r\n        >\r\n          Start Game\r\n        </Button>\r\n      );\r\n    }\r\n\r\n    if (view === 0) {\r\n      return (\r\n        <div id=\"render-cube-class\">\r\n          <div id=\"show-active\">\r\n            <div id=\"start-timer\">Time Remaining: {this.state.timerTime}</div>\r\n            <div className=\"question\">\r\n              <div id=\"answersCorrect\">Correct Answers = {this.right}</div>\r\n              <div id=\"display\"></div>\r\n              <span>Question:{this.state.currentQuestion.id}</span>&nbsp;\r\n              {this.state.currentQuestion.question}\r\n            </div>\r\n            <div id=\"answer\">\r\n              <div id=\"blue-question\" className=\"question\">\r\n                {this.state.currentAnswerChoiceBlue}\r\n              </div>\r\n              <div id=\"orange-question\" className=\"question\">\r\n                {this.state.currentAnswerChoiceOrange}\r\n              </div>\r\n              <div id=\"yellow-question\" className=\"question\">\r\n                {this.state.currentAnswerChoiceYellow}\r\n              </div>\r\n              <div id=\"red-question\" className=\"question\">\r\n                {this.state.currentAnswerChoiceRed}\r\n              </div>\r\n            </div>\r\n            <Button\r\n              color=\"success\"\r\n              onClick={(e) => this.checkAnswer(e)}\r\n              id=\"submit-answer\"\r\n            >\r\n              Submit Answer\r\n            </Button>\r\n\r\n            <div className=\"cube\">\r\n              <div className=\"rotating-box\">\r\n                <div className=\"single-rb\">\r\n                  <div className=\"front-side\">\r\n                    <div\r\n                      className=\"grid\"\r\n                      onClick={(e) => this.myClick(e)}\r\n                      id=\"blue\"\r\n                    ></div>\r\n                  </div>\r\n\r\n                  <div className=\"back-side\">\r\n                    <div\r\n                      className=\"grid\"\r\n                      onClick={(e) => this.myClick(e)}\r\n                      id=\"orange\"\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"left-side\">\r\n                    <div\r\n                      className=\"grid\"\r\n                      onClick={(e) => this.myClick(e)}\r\n                      id=\"red\"\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"right-side\">\r\n                    <div\r\n                      className=\"grid\"\r\n                      onClick={(e) => this.myClick(e)}\r\n                      id=\"yellow\"\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"top-side\"></div>\r\n                  <div className=\"bottom-side\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (view === 1) {\r\n      return (\r\n        <div>\r\n          <ButtonRedeem right={this.right} reset={this.reset} />\r\n\r\n          {/* <Button color=\"primary\" onClick={() => this.reset()} id=\"reset-game2\">\r\n            Reset Game\r\n          </Button> */}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"loserDiv\">\r\n          <h1 className=\"betterLuck\">Better Luck Next Time!</h1>\r\n          <h3 className=\"betterLuck\">\r\n            You got {this.right} answers correct! You will need to answer every\r\n            question correctly to receive a prize.\r\n          </h3>\r\n          <Button color=\"primary\" onClick={() => this.reset()} id=\"reset-game\">\r\n            Reset Game\r\n          </Button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default Cube;\r\n","import React from \"react\";\r\n\r\nconst Instructions = (props) => {\r\n  return (\r\n    <div className=\"instructions\">\r\n      <h1>Noobx-Cube Instructions</h1>\r\n      <h3 className=\"instructions\" id=\"instructions\">\r\n        Welcome to Noobx Cube! This is a quiz game where you may win the\r\n        director's cut of a new movie that is trending wildly. The goal of the\r\n        game is to read the question and then click the color on the spinning\r\n        cube that corresponds with the correct answer and then click the submit\r\n        button to confirm your selection. Be quick because there is a timer so\r\n        reflexes are just as important as intellect! Good luck!\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Instructions;\r\n","import React, { Component } from \"react\";\r\nimport TMDB from \"./TMDB\";\r\nimport axios from \"axios\";\r\n\r\nclass Trending extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      trending: [],\r\n    };\r\n    this.showTrending = this.showTrending.bind(this);\r\n  }\r\n\r\n  // this is a way to load a method when the component loads, or mounts;\r\n  // bind the method to the class\r\n  componentDidMount() {\r\n    console.log(\"component Did mount\");\r\n    this.showTrending();\r\n  }\r\n\r\n  showTrending() {\r\n    // const url = `https://api.themoviedb.org/3/movie/${film}?api_key=${TMDB.api_key}&append_to_response=videos,images&language=en`;\r\n    const url = `https://api.themoviedb.org/3/trending/movie/week?api_key=${TMDB.api_key}&append_to_response=videos,images&language=en`;\r\n    axios({\r\n      method: \"GET\",\r\n      url: url,\r\n    }).then((response) => {\r\n      console.log(response.data.results); // take a look at the array you get back!\r\n      this.setState({\r\n        trending: response.data.results,\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    let posterLink = \"https://image.tmdb.org/t/p/w780\";\r\n    let trendingFilms = this.state.trending.map((film, index) => {\r\n      return (\r\n        <img src={posterLink + film.poster_path} alt={film.title} key={index} />\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"about\">\r\n        <h1 id=\"trending\">Trending</h1>\r\n        {trendingFilms}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Trending;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Cube from \"./Cube\";\r\nimport Question from \"./Question\";\r\nimport Instructions from \"./Instructions\";\r\nimport Trending from \"./Trending\";\r\n\r\n// this bit is to use routing; need to do a npm install react-router-dom\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n// note to self: I need npm install dotenv for a local environment;  I also need a .env.local file in my root\r\n// folder.\r\n// note to self:  npm install axios if I'm going to make calls to axios for api or whatever.\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    console.log(Question.questions[0].question);\r\n    return (\r\n      <Router>\r\n        {/* place link tags inside the Router Tags */}\r\n        <nav>\r\n          <Link to=\"/tandem-apprenticeship-quiz/\">Play Noobx Cube</Link>\r\n          <Link to=\"/trending\">Trending</Link>\r\n          <Link to=\"/instructions\">Instructions</Link>\r\n        </nav>\r\n        {/* passing props inside the router */}\r\n        <div>\r\n          <Route path=\"/trending\" component={Trending} />\r\n          {/* <Route exact path=\"/\" component={ () =>  <Cube />} /> */}\r\n          <Route exact path=\"/tandem-apprenticeship-quiz/\" component={Cube} />\r\n          <Route path=\"/instructions\" component={Instructions} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}